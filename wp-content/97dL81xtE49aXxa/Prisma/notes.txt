//////////////////////////////////////////////////////////////////////////////

Another new plan:
------------------------------------------------------------------------------

Begin with pseudo-randomly placed prisms - they're actually on a grid so we don't get two in the same place. 

Structural changes
--------------------
Extended Sprites are now declared on Prisma.Items rather than as vars in create.

compontents
pack
elements
custom
workers
players
helpers
extras
essentials





/////////////

Players can fire white light rays. Aim is to hit prisms. 
They might get smaller with each level. Maybe even move about a bit.

When a prism is hit by white light (splinters have no effect)
• It changes state, becoming dormant. 
• A new prism is added elsewhere. 
• The white light splinters into a fan of coloured rays which score 
  bonus points when they exit the game. Perhaps we could use a score
  multiplier for each splinter.

Splinters can be removed by tapping in their path.

At the end of the level, the prisms go into jewel mode. There's a free for all, with each player dragging as many as possible into their homezone for more bonus points. Rewards are even greater if the prism was previously hit by the collecting player.

//////////////////////////////////////////////////////////////////////////////


Bug - 
Some prisms are not becoming fabulous :(

willRefract may be worth another look.

Used this breakpoint in checkPrism - when it fails, there's no prism.
Want to inspect the state of affairs at this point, but of course, the error's disappeared now.

checkPrism = function (splinterName) {
	
	var collidedPrism; 
	if(splinters[splinterName] && (Object.keys(splinters).length === 1)){
		collidedPrism = splinters[splinterName].primaryRay.shuttle.currPrism;
		//f.fabIndices.push(f.prismGroup.getIndex(collidedPrism));
> BREAKPOINT HERE		f.prismGroup.getIndex(collidedPrism) === -1;
		if(collidedPrism){
			collidedPrism.beFabulous();
		}
	}
},
f.prismGroup.getIndex(collidedPrism) === -1;


Might be better if you get extra points for collecting all the splinters  -
your opponents could chose to fend you off physically.

Also, now think we SHOULD always wait till all prisms are fabulous and then do the free for all collecting them - you can feel the tension build you edge closer to having them all fabbed up

1. Prisms only draggable when all are fabulous.

2. level ends only when all fab prisms collected - not on a timer!

Ammo issue - we may stop with one shot left, then start after a break - guess what - no ammo.
So we need a timeout reset by firing - if we don't fire for say half a second while we have ANY ammo left, we get a reload.


Cool work adding
f.newLevel = new Phaser.Signal();

But having to do f.addPrisms = addPrisms just so we can use it else where is very sucky.

Have to hit prism seven times to make it splinter.

currentPrism.hits++


homeZone (group)
	homeZonePanelAuto	
		
	homeZone.hudTeamScore (group) - 2 children 
			scorePanels sprite
			BmapText 'Team 2 0'
			
	homeZone.hudScore (BmapText) '0' - player score
	
	homeZone.scorePanels - 3 children
			group
					scorePanels sprite
					BmapText 'Team 2 0'
			group
					scorePanels sprite
					BmapText 'Team 1 0'
			group
					scorePanels sprite
					BmapText 'LEVEL 1 OVER'
	
		
I set levelPending to true on line 603		
			

1.	Think we should award points of removed splinters to nearest home zone.
		2.	Differentiate levels
3.	Scoring and type
4.	Countdown and interlevel graphics.
5.	logo and instructions
6.	Sound
7.	done

Each time a prism is hit, it gets another rainbow stripe. Once hit seven(?) times, it splinters. Different players could be hitting the same prism?

Differences between levels - can't make prisms smaller as the hitarea's already pretty titchy

Some kind of animation on prisms appearing etc.

Maybe homezones could flash when splinters complete.



Are we starting fabulous timer before all splinters have completed?

Our checking pixelPerfect homezones is a waste - we can check distance form anchor of course!!!!

Amend player.updateScore 0n line 17 of Boot.js so we can pas in different score values.


Scoring

Homezones as trianges?

Score graphics

Instructions

Logo

Do something animated/glowy with bg?

Some kind of shadow on prisms?





Aim is to hit other homezones with white light.

Accumulating prisms make this harder.

Begin rainbow A, refract

Before that exits, begin rainbow B.

Wait till rainbow A exits, then refract rainbow B

Error line 1252



OK, so pre-existing prisms refracting between each other is a can of worms as they can approach prisms from any angle and do not then meet neatly.

We either don't do this and turn them into black stones or summat, or we use a forward scout shuttle and rotate shuttles as neccesary.
Probs with this: 
maybe multiple rainbows hit it simultaneously - so just the first refracts 
prisms may be too close together to rotate in time - could we then have the rainbow bounce them away... but then we may push them into the path of other rainbows and we'll be back to square one as they'll be at the wrong angle all over again. Yes, but we can then do the same - push the prism out of the way if it's close, rotate it if not


This whole pre-existing refraction thing is a bit meh anyway. It looks nice, but serves no real purpose.

If they became onyx-like after rainbow leaves them, they would have to reflect the rainbows off them... will this be back to the horror, or would we be OK as we're not doing corners?






We've got dodgy rainbow behaviour at the moment:
Some seem to be multi triggering and generating short spectrums followed by white light.

Problem with needing to mask where rainbows overlap prisms - may have to replace prisms with solid versions and bring to front to hide edges.

If we get imperfect junctions between rainbows and prisms, could have prisms move and rotate to match rainbows.

Still need to ensure that prisms don't overlap. 




Rainbows are added programatically - not too many at once.

The closer the prisms are to your homezone, the higher the score for collecting.

[Could do it so there are some prisms automatically added, 
can't enable prism adding for users only after they've collected some as we don't know who's tapping]

As soon as rainbow exits, prisms can be collected.

Perhaps speed and number oprisms can be adjusted for different levels, and maybe even number of splits on a prism

Can't add a prism where one already exists - if there's one nearby, tapping has no effect.

What if light refracts through all existing prisms?

!!!!
Getting weird results when tapping rainbow on edge of screen. Could add buffers to disable taps in this area.
!!!!!


/////////

Rainbows start as white light.

Aim is to hit opponents' homezones with white light.

homezoner = homezone owner

white light reduce homezoner's score, split rainbows add to homezoner's score

Could have prisms begin to spectrally glow - can then be dragged to homezone for bonus points.

This could either happen when a rainbow exits and its ancestors are removed, or after some kind of set interval


1. Countdown = throbbing homezones or series of triangles

2. First to tap fires ray of white light



ALTERNATIVE

1. Everyone can fire. Can only stop rays of light by hitting them with your own - this turns them into rainbows. It's really hard, so there won't be many.
Would have to add collision within the shuttle group - bit of a faff.



1. Everyone can fire. 

if hit by white light, you lose points/power (maybe slowing your rays).

If you are hit by a rainbow, you gain points, so the goal is to deflect rays onto your hz.


homeZoneAuto  
need to use this if f.demo
and need to check zone number so we can actually play zone 5